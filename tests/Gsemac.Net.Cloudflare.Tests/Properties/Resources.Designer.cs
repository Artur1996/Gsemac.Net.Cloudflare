//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gsemac.Net.Cloudflare.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gsemac.Net.Cloudflare.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;!--[if lt IE 7]&gt;
        ///&lt;html class=&quot;no-js ie6 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if IE 7]&gt;
        ///&lt;html class=&quot;no-js ie7 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if IE 8]&gt;
        ///&lt;html class=&quot;no-js ie8 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if gt IE 8]&gt;&lt;!--&gt;
        ///&lt;html class=&quot;no-js&quot; lang=&quot;en-US&quot;&gt;
        ///&lt;!--&lt;![endif]--&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Please Wait... | Cloudflare&lt;/title&gt;
        ///    &lt;meta name=&quot;captcha-bypass&quot; id=&quot;captcha-bypass&quot; /&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;Content-Type&quot; con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string captcha_bypass {
            get {
                return ResourceManager.GetString("captcha_bypass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;!--[if lt IE 7]&gt;
        ///&lt;html class=&quot;no-js ie6 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if IE 7]&gt;
        ///&lt;html class=&quot;no-js ie7 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if IE 8]&gt;
        ///&lt;html class=&quot;no-js ie8 oldie&quot; lang=&quot;en-US&quot;&gt;
        ///   &lt;![endif]--&gt;
        ///&lt;!--[if gt IE 8]&gt;&lt;!--&gt;
        ///&lt;html class=&quot;no-js&quot; lang=&quot;en-US&quot;&gt;
        ///&lt;!--&lt;![endif]--&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Access denied | example.com used Cloudflare to restrict access&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; char [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cf_cookie_error {
            get {
                return ResourceManager.GetString("cf_cookie_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en-US&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot; /&gt;
        ///    &lt;meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot; /&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot; /&gt;
        ///    &lt;title&gt;Just a moment...&lt;/title&gt;
        ///    &lt;style type=&quot;text/css&quot;&gt;
        ///        body, html {
        ///            width: 100%;
        ///            height: 100%;
        ///            margin: 0;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string im_under_attack {
            get {
                return ResourceManager.GetString("im_under_attack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;status&quot;: &quot;ok&quot;,
        ///  &quot;message&quot;: &quot;&quot;,
        ///  &quot;startTimestamp&quot;: 1646868923535,
        ///  &quot;endTimestamp&quot;: 1646868926209,
        ///  &quot;version&quot;: &quot;v2.1.0&quot;,
        ///  &quot;solution&quot;: {
        ///    &quot;url&quot;: &quot;https://example.com/&quot;,
        ///    &quot;status&quot;: 200,
        ///    &quot;headers&quot;: {},
        ///    &quot;response&quot;: &quot;&quot;,
        ///    &quot;cookies&quot;: [
        ///      {
        ///        &quot;name&quot;: &quot;valid_cookie&quot;,
        ///        &quot;value&quot;: &quot;value&quot;,
        ///        &quot;domain&quot;: &quot;.example.com&quot;,
        ///        &quot;path&quot;: &quot;/&quot;,
        ///        &quot;expires&quot;: 1709940925,
        ///        &quot;size&quot;: 47,
        ///        &quot;httpOnly&quot;: false,
        ///        &quot;secure&quot;: false,
        ///        &quot;sess [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResponseWithCookiesWithEmptyStringForName {
            get {
                return ResourceManager.GetString("ResponseWithCookiesWithEmptyStringForName", resourceCulture);
            }
        }
    }
}
